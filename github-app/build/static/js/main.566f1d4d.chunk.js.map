{"version":3,"sources":["components/profile/index.tsx","components/repositories/index.tsx","components/search/index.tsx","components/layout/index.tsx","components/tab/index.tsx","providers/github-provider.tsx","App.tsx","components/backdrop/index.tsx","services/githubApi.ts","index.tsx"],"names":["Profile","user","renderField","label","text","Box","my","Typography","variant","renderFieldWithLink","link","target","href","rel","renderFieldVert","Grid","item","xs","textAlign","maxWidth","display","gridTemplateColumns","alignItems","padding","Avatar","src","avatar_url","alt","name","sx","width","height","login","html_url","company","location","blog","container","spacing","followers","following","public_repos","public_gists","Repositories","repos","starred","data","tabs","children","RenderRepositoryItems","data-testid","length","gap","map","repo","p","borderRadius","boxShadow","flexDirection","justifyContent","gutterBottom","full_name","Chip","size","language","RepositoryItem","Search","onSearch","useState","query","setQuery","role","TextField","id","placeholder","onChange","e","value","fullWidth","ml","Button","type","onClick","Layout","className","component","TabPanel","index","other","hidden","aria-labelledby","py","Tab","React","setValue","Tabs","event","newValue","tab","a11yProps","Divider","GithubContext","createContext","GithubProvider","fetchGitApi","loading","state","setState","getUser","username","a","response","s","getRepos","getStarred","wrapperLoading","fn","Provider","actions","App","context","useContext","Error","useGithubContext","useEffect","Backdrop","color","zIndex","theme","drawer","open","CircularProgress","githubApi","url","fetch","json","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.566f1d4d.chunk.js","sourcesContent":["import { Avatar, Box, Grid, Typography } from \"@mui/material\";\nimport { User } from \"../../entities\";\n\n\ninterface ProfileProps {\n  user: User;\n}\n\nexport function Profile({ user }: ProfileProps) {\n  const renderField = (label: string, text: string) => (\n    <Box my={1}>\n      <Typography variant=\"body1\">\n        <strong> {label}:</strong> {text}\n      </Typography>\n    </Box>\n  );\n\n  const renderFieldWithLink = (label: string, text: string, link: string) => (\n    <Box my={1}>\n      <Typography variant=\"body1\">\n        <strong> {label}:</strong>{\" \"}\n        <a target=\"_blank\" href={link} rel=\"noreferrer\">\n          {text}\n        </a>\n      </Typography>\n    </Box>\n  );\n  const renderFieldVert = (label: string, text: number) => (\n    <Grid item xs={3}>\n      <Typography variant=\"body2\" textAlign=\"center\">\n        <strong> {label}</strong>\n      </Typography>\n      <Typography variant=\"body2\" textAlign=\"center\">\n        {text}\n      </Typography>\n    </Grid>\n  );\n\n  return (\n    <Box\n      maxWidth={600}\n      display=\"grid\"\n      gridTemplateColumns=\"repeat(auto-fit, minmax(256px, 1fr))\"\n      alignItems=\"center\"\n      padding={2}\n    >\n      <Box>\n        <Avatar\n          src={user.avatar_url}\n          alt={user.name}\n          sx={{ width: 256, height: 256 }}\n        />\n      </Box>\n      <Box>\n        <Typography variant=\"h3\">{user.name}</Typography>\n        {renderFieldWithLink(\"Username\", user.login, user.html_url)}\n        {renderField(\"Company\", user.company)}\n        {renderField(\"Location\", user.location)}\n        {renderFieldWithLink(\"Blog\", user.blog, user.blog)}\n\n        <Grid container spacing={2}>\n          {renderFieldVert(\"Followers\", user.followers)}\n          {renderFieldVert(\"Following\", user.following)}\n          {renderFieldVert(\"Repos\", user.public_repos)}\n          {renderFieldVert(\"Gists\", user.public_gists)}\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","import Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport { TabProps, Tab } from \"..\";\nimport { Chip } from \"@mui/material\";\nimport { Repository } from \"../../entities\";\n\ninterface RepositoriesProps {\n  repos?: Repository[];\n  starred?: Repository[];\n}\n\nexport const Repositories = ({\n  repos = [],\n  starred = [],\n}: RepositoriesProps) => {\n  const data: TabProps = {\n    tabs: [\n      {\n        label: \"Repositories\",\n        children: RenderRepositoryItems(repos),\n      },\n      {\n        label: \"Starred\",\n        children: RenderRepositoryItems(starred),\n      },\n    ],\n  };\n\n  return (\n    <Box data-testid=\"repositories\" sx={{ width: \"100%\" }}>\n      <Tab {...data} />\n    </Box>\n  );\n};\n\nfunction RenderRepositoryItems(repos: Repository[]) {\n  return repos.length > 0 ? (\n    <Box\n      sx={{\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n        gap: 2,\n      }}\n    >\n      {repos.map((repo) => RepositoryItem(repo))}\n    </Box>\n  ) : (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        No repositories found\n      </Typography>\n    </Box>\n  );\n}\n\nfunction RepositoryItem(repo: Repository): JSX.Element {\n  return (\n    <Box\n      key={repo.full_name}\n      sx={{\n        p: 3,\n        borderRadius: 2,\n      }}\n      boxShadow={5}\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"baseline\"\n      justifyContent=\"space-between\"\n    >\n      <Typography variant=\"h6\" gutterBottom>\n        {repo.name}\n      </Typography>\n      <Typography variant=\"body2\" gutterBottom>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href={repo.html_url}>\n          {repo.full_name}\n        </a>\n      </Typography>\n      <Chip size=\"small\" label={repo.language} />\n    </Box>\n  );\n}\n","import { Button, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\n\ninterface Props {\n  onSearch: (query: string) => void;\n}\n\nexport const Search = ({ onSearch }: Props) => {\n  const [query, setQuery] = useState(\"\");\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n\n  const handleClick = () => {\n    onSearch(query);\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }} alignItems=\"center\" role=\"search\">\n      <TextField\n        id=\"outlined-uncontrolled\"\n        placeholder=\"Username\"\n        onChange={handleChange}\n        label=\"Username\"\n        size=\"small\"\n        fullWidth\n      />\n      <Box ml={1}>\n        <Button type=\"button\" variant=\"contained\" onClick={handleClick}>\n          Buscar\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n","import { Box } from \"@mui/system\";\nimport React from \"react\";\n\nimport { Search } from \"..\";\n\ninterface Props {\n  children: React.ReactNode;\n  onSearch: (query: string) => void;\n}\n\nexport const Layout = ({ children, onSearch }: Props) => {\n  return (\n    <Box sx={{ padding: 2 }} className=\"App\">\n      <Box component=\"header\">\n        <Search onSearch={onSearch} />\n      </Box>\n      <main>{children}</main>\n    </Box>\n  );\n};\n","import { Tabs, Tab as TabMui, Divider } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel({ children, value, index, ...other }: TabPanelProps) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ py: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index: number) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\ninterface TabProp {\n  label: string;\n  children: React.ReactNode;\n}\n\nexport interface TabProps {\n  tabs: TabProp[];\n}\n\nexport const Tab = ({ tabs }: TabProps) => {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <Box>\n        <Tabs value={value} onChange={handleChange}>\n          {tabs.map((tab, index) => (\n            <TabMui key={tab.label} label={tab.label} {...a11yProps(index)} />\n          ))}\n        </Tabs>\n        <Divider />\n      </Box>\n      {tabs.map((tab, index) => (\n        <TabPanel key={tab.label} value={value} index={index}>\n          {tab.children}\n        </TabPanel>\n      ))}\n    </>\n  );\n};\n","import { useState, createContext, useContext } from \"react\";\nimport { Repository, User } from \"../entities\";\n\ninterface GithubProviderProps {\n  children: React.ReactNode;\n  fetchGitApi: (url: string) => Promise<{\n    data: any;\n  }>;\n}\n\ninterface GithubContextState {\n  user: User | null;\n  repos: Repository[];\n  loading: boolean;\n  starred: Repository[];\n}\n\nexport interface GithubContextActions {\n  getUser: (username: string) => Promise<void>;\n  getRepos: (username: string) => Promise<void>;\n  getStarred: (username: string) => Promise<void>;\n}\n\nexport interface GithubProviderContext {\n  state: GithubContextState;\n  actions: GithubContextActions;\n}\n\nexport const GithubContext = createContext<GithubProviderContext>(\n  {} as GithubProviderContext\n);\n\nexport const GithubProvider = ({\n  children,\n  fetchGitApi,\n}: GithubProviderProps) => {\n  const [state, setState] = useState({\n    loading: false,\n    user: null,\n    repos: [],\n    starred: [],\n  });\n\n  const getUser = async (username: string) => {\n    const response = await fetchGitApi(username);\n    const data = response.data;\n    setState((s) => ({ ...s, user: data }));\n    getRepos(username);\n    getStarred(username);\n  };\n\n  const getRepos = async (username: string) => {\n    const response = await fetchGitApi(`${username}/repos`);\n    const data = response.data;\n    setState((s) => ({ ...s, repos: data }));\n  };\n\n  const getStarred = async (username: string) => {\n    const response = await fetchGitApi(`${username}/starred`);\n    const data = response.data;\n    setState((s) => ({ ...s, starred: data }));\n  };\n\n  const wrapperLoading =\n    (fn: (...args: any) => Promise<void>) =>\n    async (...args: any) => {\n      setState((s) => ({ ...s, loading: true }));\n      await fn(...args);\n      setState((s) => ({ ...s, loading: false }));\n    };\n\n  return (\n    <GithubContext.Provider\n      value={{\n        state,\n        actions: {\n          getUser: wrapperLoading(getUser),\n          getRepos: wrapperLoading(getRepos),\n          getStarred: wrapperLoading(getStarred),\n        },\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  );\n};\n\nexport const useGithubContext = () => {\n  const context = useContext(GithubContext);\n  if (!context) {\n    throw new Error(\"useGithubContext must be used within a GithubProvider\");\n  }\n  return context;\n};\n","import { Profile, Repositories, Layout, Loading } from \"./components\";\nimport { useGithubContext } from \"./providers/github-provider\";\nimport { Typography } from \"@mui/material\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  const { state, actions } = useGithubContext();\n\n  useEffect(() => {\n    if (state.user === null) {\n      actions.getUser(\"felipefrmelo\");\n    }\n  });\n\n  return (\n    <Layout onSearch={actions.getUser}>\n      {state.user?.login ? (\n        state.loading ? (\n          Loading(state.loading)\n        ) : (\n          <>\n            <Profile user={state.user} />\n            <Repositories repos={state.repos} starred={state.starred} />\n          </>\n        )\n      ) : (\n        <Typography variant=\"h4\">No user found</Typography>\n      )}\n    </Layout>\n  );\n}\n\nexport default App;\n","import { Backdrop, CircularProgress } from \"@mui/material\";\n\nexport function Loading(loading: boolean) {\n  return (\n    <Backdrop\n      sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\n      open={loading}\n    >\n      <CircularProgress size={10} color=\"inherit\" />\n    </Backdrop>\n  );\n}\n","export const githubApi = async (url: string) => {\n  const response = await fetch(`https://api.github.com/users/${url}`);\n  const data = await response.json();\n  return { data };\n};\n","import { CssBaseline } from \"@mui/material\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { GithubProvider } from \"./providers/github-provider\";\nimport { githubApi } from \"./services/githubApi\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <GithubProvider fetchGitApi={githubApi}>\n      <App />\n    </GithubProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}